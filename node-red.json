[
    {
        "id": "9594d210f05b5183",
        "type": "tab",
        "label": "WaterBnB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bc69d7f98db3a2d3",
        "type": "group",
        "z": "9594d210f05b5183",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "30b8635d9590b866",
            "2b12f269c30d46a4",
            "1ce8c654ada331c3"
        ],
        "x": 74,
        "y": 339,
        "w": 772,
        "h": 142
    },
    {
        "id": "1e2a5a4f15c34ea2",
        "type": "group",
        "z": "9594d210f05b5183",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b6d4fc61234aa516",
            "b7c011076877d98b"
        ],
        "x": 74,
        "y": 239,
        "w": 412,
        "h": 82
    },
    {
        "id": "4bde7d912076ecff",
        "type": "group",
        "z": "9594d210f05b5183",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e783e0fc879bb54e",
            "37fc62959152743d",
            "aef37ac78a61e862",
            "1f2f93163183d5ca",
            "c05de65247d814bc"
        ],
        "x": 74,
        "y": 499,
        "w": 792,
        "h": 142
    },
    {
        "id": "144d96187f75916c",
        "type": "group",
        "z": "9594d210f05b5183",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4eb9a2b2b642cdf9",
            "1e89915ed3cd7292",
            "0c829b786266edf7"
        ],
        "x": 74,
        "y": 859,
        "w": 532,
        "h": 162
    },
    {
        "id": "bb0a53e01c444cf4",
        "type": "group",
        "z": "9594d210f05b5183",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2f75cf9861ab18c8",
            "2f1e1426eff79b25",
            "f4aa2f51e59a0fa8",
            "9c5857b73b77e227"
        ],
        "x": 74,
        "y": 679,
        "w": 812,
        "h": 142
    },
    {
        "id": "7c8538b115e676e8",
        "type": "inject",
        "z": "9594d210f05b5183",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "1458e6d559c83d29"
            ]
        ]
    },
    {
        "id": "1458e6d559c83d29",
        "type": "function",
        "z": "9594d210f05b5183",
        "name": "Téléportation",
        "func": "// create random position\nvar lat = 43.61999752 + Math.random() * 0.1;\nvar lon = 7.0499998 + Math.random() * 0.1;\nmsg.payload={\n    layer:\"swimming pools\",\n    lat:lat, \n    lon:lon, \n    name:global.get(\"clientid\"), \n    description: \"Temperature in my swimming pool\",\n    value: 20.5,\n    unit: \"°C\",\n    icon:\"male\", \n    color:\"#000\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 180,
        "wires": [
            [
                "6678bff0e9be7401",
                "1c42f86ab87ace5b",
                "0a23c47ba417c902"
            ]
        ]
    },
    {
        "id": "38c835069ac013bb",
        "type": "ui_button",
        "z": "9594d210f05b5183",
        "name": "",
        "group": "077036ac7a62d58e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Move Client",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-male",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "1458e6d559c83d29"
            ]
        ]
    },
    {
        "id": "e783e0fc879bb54e",
        "type": "mqtt in",
        "z": "9594d210f05b5183",
        "g": "4bde7d912076ecff",
        "name": "",
        "topic": "uca/iot/piscine",
        "qos": "0",
        "datatype": "utf8",
        "broker": "2440edb5d689cbd1",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 560,
        "wires": [
            [
                "aef37ac78a61e862",
                "c05de65247d814bc"
            ]
        ]
    },
    {
        "id": "37fc62959152743d",
        "type": "debug",
        "z": "9594d210f05b5183",
        "g": "4bde7d912076ecff",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 600,
        "wires": []
    },
    {
        "id": "aef37ac78a61e862",
        "type": "json",
        "z": "9594d210f05b5183",
        "g": "4bde7d912076ecff",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 600,
        "wires": [
            [
                "1f2f93163183d5ca"
            ]
        ]
    },
    {
        "id": "6678bff0e9be7401",
        "type": "worldmap-tracks",
        "z": "9594d210f05b5183",
        "name": "",
        "depth": "6",
        "layer": "combined",
        "smooth": false,
        "x": 630,
        "y": 160,
        "wires": [
            [
                "1c42f86ab87ace5b"
            ]
        ]
    },
    {
        "id": "1c42f86ab87ace5b",
        "type": "ui_worldmap",
        "z": "9594d210f05b5183",
        "group": "077036ac7a62d58e",
        "order": 3,
        "width": "25",
        "height": "25",
        "name": "",
        "lat": "43.61999752",
        "lon": "7.0499998",
        "zoom": "11",
        "layer": "OSMC",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "deg",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,TL,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1200,
        "y": 320,
        "wires": []
    },
    {
        "id": "b6d4fc61234aa516",
        "type": "ui_button",
        "z": "9594d210f05b5183",
        "g": "1e2a5a4f15c34ea2",
        "name": "",
        "group": "077036ac7a62d58e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "b7c011076877d98b"
            ]
        ]
    },
    {
        "id": "b7c011076877d98b",
        "type": "function",
        "z": "9594d210f05b5183",
        "g": "1e2a5a4f15c34ea2",
        "name": "Reset Layer",
        "func": "// clear the \"by default\" layer \nmsg.payload = {\"command\": { \"clear\": \"swimming pools\" } };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 280,
        "wires": [
            [
                "1c42f86ab87ace5b"
            ]
        ]
    },
    {
        "id": "1f2f93163183d5ca",
        "type": "function",
        "z": "9594d210f05b5183",
        "g": "4bde7d912076ecff",
        "name": "json adapt",
        "func": "//http://stevesnoderedguide.com/node-red-functions\n\nvar nmsg = {\n  topic: msg.topic\n};\n\nvar busy;\nif (msg.payload.piscine.presence === \"Non\")\n  busy = \"battery-empty\";\nelse\n  busy = \"battery-full\";\n\n// Obtenir la date et l'heure actuelles\nvar currentDate = new Date();\nvar currentDateTimeString = currentDate.toISOString();\n\nnmsg.payload = {\n    layer : \"swimming pools\",\n    name : msg.payload.info.ident,\n    description: msg.payload.info.description,\n    unit:\"C\",\n    color: \"#000\",\n    value: msg.payload.status.temperature,\n    lat: msg.payload.info.loc.lat,\n    lon: msg.payload.info.loc.lon,\n    //iconColor : \"Brown\"\n    iconColor: msg.payload.piscine.led,\n    //icon: \"male\",\n    icon: busy,\n    radius:100,\n  weblink: { \"name\": \"Demande ouverture\", \"url\": \"http://192.168.182.144/open?idswp=\" + msg.payload.info.ident + \"&idu=\" + flow.get('clientid') + \"&datetime=\" + currentDateTimeString }}\n\nreturn nmsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 600,
        "wires": [
            [
                "1c42f86ab87ace5b",
                "37fc62959152743d"
            ]
        ]
    },
    {
        "id": "4eb9a2b2b642cdf9",
        "type": "http in",
        "z": "9594d210f05b5183",
        "g": "144d96187f75916c",
        "name": "Open",
        "url": "/open",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 920,
        "wires": [
            [
                "1e89915ed3cd7292",
                "0c829b786266edf7"
            ]
        ]
    },
    {
        "id": "1e89915ed3cd7292",
        "type": "debug",
        "z": "9594d210f05b5183",
        "g": "144d96187f75916c",
        "name": "Open debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 900,
        "wires": []
    },
    {
        "id": "0c829b786266edf7",
        "type": "http response",
        "z": "9594d210f05b5183",
        "g": "144d96187f75916c",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 500,
        "y": 980,
        "wires": []
    },
    {
        "id": "30b8635d9590b866",
        "type": "debug",
        "z": "9594d210f05b5183",
        "g": "bc69d7f98db3a2d3",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 440,
        "wires": []
    },
    {
        "id": "2b12f269c30d46a4",
        "type": "ui_form",
        "z": "9594d210f05b5183",
        "g": "bc69d7f98db3a2d3",
        "name": "WaterBnB Client",
        "label": "WaterBnB Client (= numéro étudiant UCA)",
        "group": "077036ac7a62d58e",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Client ID",
                "value": "clientid",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "clientid": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "clientform",
        "topicType": "str",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "30b8635d9590b866",
                "1ce8c654ada331c3"
            ]
        ]
    },
    {
        "id": "0a23c47ba417c902",
        "type": "debug",
        "z": "9594d210f05b5183",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "2f75cf9861ab18c8",
        "type": "mqtt in",
        "z": "9594d210f05b5183",
        "g": "bb0a53e01c444cf4",
        "name": "",
        "topic": "uca/waterbnb/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "30afc067.303e28",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 760,
        "wires": [
            [
                "f4aa2f51e59a0fa8"
            ]
        ]
    },
    {
        "id": "2f1e1426eff79b25",
        "type": "debug",
        "z": "9594d210f05b5183",
        "g": "bb0a53e01c444cf4",
        "name": "debug from owntracks MQTT topic",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 780,
        "wires": []
    },
    {
        "id": "f4aa2f51e59a0fa8",
        "type": "json",
        "z": "9594d210f05b5183",
        "g": "bb0a53e01c444cf4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 760,
        "wires": [
            [
                "2f1e1426eff79b25",
                "9c5857b73b77e227"
            ]
        ]
    },
    {
        "id": "9c5857b73b77e227",
        "type": "function",
        "z": "9594d210f05b5183",
        "g": "bb0a53e01c444cf4",
        "name": "json convert",
        "func": "// Convert json of owntracks to worldmap\nreturn {\n    payload: {\n        layer:\"waterbnb\",\n        name: msg.payload.tid,\n        lat: msg.payload.lat,\n        lon: msg.payload.lon,\n        icon: 'user-circle-o',\n        iconColor: msg.payload.couleur ?? \"Blue\"\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 720,
        "wires": [
            [
                "1c42f86ab87ace5b"
            ]
        ]
    },
    {
        "id": "c05de65247d814bc",
        "type": "debug",
        "z": "9594d210f05b5183",
        "g": "4bde7d912076ecff",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 540,
        "wires": []
    },
    {
        "id": "71c1e04466139f48",
        "type": "comment",
        "z": "9594d210f05b5183",
        "name": "Formulaire d'identification du client",
        "info": "Grâce au formulaire, on positionne une variable globale au flow : l'ident du client qui utilise le service.",
        "x": 1220,
        "y": 420,
        "wires": []
    },
    {
        "id": "1ce8c654ada331c3",
        "type": "function",
        "z": "9594d210f05b5183",
        "g": "bc69d7f98db3a2d3",
        "name": "Callback du formulaire d'identification",
        "func": "// Ce node permet de stocker l'identificateur du cliend dans le flow (un peu comme une variable globale)\n\n\n//https://stevesnoderedguide.com/node-red-variables\n//https://techexplorations.com/guides/esp32/node-red-esp32-project/node-red-messages-variables/\n\nif (msg.topic === \"clientform\"){\n  flow.set(\"clientid\", msg.payload.clientid);\n  }\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "4301a4aae38596d4",
        "type": "comment",
        "z": "9594d210f05b5183",
        "name": "Dashboard \"donné\" à un client du service WaterBnB : trois choses à paramétrer => le topic de owntracks, le lien de demande d'ouverture et l'ID du client via le formulaire",
        "info": "Lorsqu'un client va vouloir accéder à une piscine, il va devoir utiliser cette interface graphique.\n",
        "x": 630,
        "y": 20,
        "wires": []
    },
    {
        "id": "529754de60277df7",
        "type": "comment",
        "z": "9594d210f05b5183",
        "name": "Reset display",
        "info": "",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "9cfc3b26e12ea8c2",
        "type": "comment",
        "z": "9594d210f05b5183",
        "name": "Affichage avec hyperlien d'ouverture des piscines ",
        "info": "",
        "x": 1260,
        "y": 560,
        "wires": []
    },
    {
        "id": "e2192fc2c41225ac",
        "type": "comment",
        "z": "9594d210f05b5183",
        "name": "Pour tester la réception de la demande d'ouverture",
        "info": "",
        "x": 850,
        "y": 940,
        "wires": []
    },
    {
        "id": "7e8f971cd7af119b",
        "type": "comment",
        "z": "9594d210f05b5183",
        "name": "Affichage de la géolocalisation du client de WaterBnB",
        "info": "",
        "x": 1140,
        "y": 740,
        "wires": []
    },
    {
        "id": "077036ac7a62d58e",
        "type": "ui_group",
        "z": "9594d210f05b5183",
        "name": "Informations sur le client",
        "tab": "dca451ac586b46aa",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2440edb5d689cbd1",
        "type": "mqtt-broker",
        "name": "Mosquitto broker",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "tls": "",
        "clientid": "GMM",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "30afc067.303e28",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.eclipseprojects.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "15",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "dca451ac586b46aa",
        "type": "ui_tab",
        "z": "9594d210f05b5183",
        "name": "WaterBnB",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]